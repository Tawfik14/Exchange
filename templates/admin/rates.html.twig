{% extends 'base.html.twig' %}
{% block title %}Admin — Taux{% endblock %}

{% block stylesheets %}
  {{ parent() }}
  <style>
    /* ===== Thème aligné aux formulaires précédents (Poppins, noir, bords droits) ===== */
    .rates-wrap, .rates-wrap *{ font-family:'Poppins',sans-serif; color:#000; }

    .rates-wrap{ max-width:1200px; margin:40px auto; padding:0 20px; }
    .rates-wrap h1{ margin:0 0 12px; font-size:26px; font-weight:700; letter-spacing:.2px; }

    .flash{ padding:.6rem 1rem; border:1px solid #000; border-radius:0; margin:.75rem 0; }
    .flash.ok{ background:#e7ffe7; }
    .flash.err{ background:#ffe7e7; }

    /* Table */
    .rates-table{ width:100%; border-collapse:collapse; }
    .rates-table thead th{
      text-align:left; padding:10px 12px;
      border-bottom:2px solid #000;
      font-weight:600;
    }
    .rates-table tbody td{
      padding:10px 12px; border-top:1px solid #000; vertical-align:middle;
    }
    .muted{ color:#6b7280; font-style:italic; }

    /* Champs : bords droits, focus simple */
    .field{
      width:100%; padding:10px 12px;
      border:1px solid #000; border-radius:0; background:#fff; outline:none;
    }
    .field:focus{ box-shadow:0 0 0 2px rgba(0,0,0,.12); }

    /* Nombre : suppression des flèches */
    input[type=number]::-webkit-outer-spin-button,
    input[type=number]::-webkit-inner-spin-button{ -webkit-appearance:none; margin:0; }
    input[type=number]{ -moz-appearance:textfield; appearance:textfield; }

    /* Largeurs utiles */
    .w-100{ width:100px; }
    .w-120{ width:120px; }
    .w-150{ width:150px; }

    /* Bouton noir, bords droits */
    .btn-black{
      appearance:none; border:1px solid #000; background:#000; color:#fff;
      padding:12px 16px; border-radius:0; font-weight:700; cursor:pointer; line-height:1;
    }
    .btn-black:hover{ opacity:.9; }
    .btn-black:active{ opacity:.85; }
  </style>
{% endblock %}

{% block body %}
<div class="rates-wrap">
  <h1>Modifier les taux</h1>

  {% for m in app.flashes('success') %}
    <div class="flash ok">{{ m }}</div>
  {% endfor %}
  {% for m in app.flashes('error') %}
    <div class="flash err">{{ m }}</div>
  {% endfor %}

  <form method="post" action="{{ path('admin_rates', {mode: 'admin'}) }}">
    <table class="rates-table">
      <thead>
        <tr>
          <th>Code</th>
          <th>Spot</th>
          <th>Taux manuel (mid)</th>
          <th>Mode</th>
          <th>EUR→Local Achat</th>
          <th>EUR→Local Vente</th>
          <th>Local→EUR Achat</th>
          <th>Local→EUR Vente</th>
          <th>% Achat (vs mid)</th>
          <th>% Vente (vs mid)</th>
        </tr>
      </thead>
      <tbody>
        {% for code in codes %}
          {% set r = rules[code] ?? null %}
          {% set m = r ? r.mode : 'none' %}
          {% set currentMid = overrides[code] is defined ? overrides[code] : null %}
          {% set mb = r and r.manualBuy  is not null ? r.manualBuy  : '' %}
          {% set ms = r and r.manualSell is not null ? r.manualSell : '' %}
          {% set lb = (r and r.manualBuy  is not null and r.manualBuy  > 0) ? (1 / r.manualBuy)  : '' %}
          {% set ls = (r and r.manualSell is not null and r.manualSell > 0) ? (1 / r.manualSell) : '' %}

          <tr data-code="{{ code }}">
            <td style="font-weight:600;">{{ code }}</td>

            <td>
              <em class="muted">
                {% if currentMid %}
                  {{ currentMid }}
                {% else %}
                  - (spot par défaut)
                {% endif %}
              </em>
            </td>

            <td>
              <input name="mid_{{ code }}" value="{{ overrides[code]|default('') }}" placeholder="ex: 1.0850"
                     class="field w-120" />
            </td>

            <td>
              <select name="mode_{{ code }}" class="field w-150">
                <option value="none"    {% if m == 'none' %}selected{% endif %}>Aucun</option>
                <option value="manual"  {% if m == 'manual' %}selected{% endif %}>Manuel</option>
                <option value="percent" {% if m == 'percent' %}selected{% endif %}>Pourcentage</option>
              </select>
            </td>

            {# EUR→Local (sources manuelles) #}
            <td>
              <input name="mbuy_{{ code }}" value="{{ mb }}" placeholder="ex: 1.0500"
                     class="field w-120" type="number" step="0.0001" min="0" />
            </td>
            <td>
              <input name="msell_{{ code }}" value="{{ ms }}" placeholder="ex: 1.1000"
                     class="field w-120" type="number" step="0.0001" min="0" />
            </td>

            {# Local→EUR (réciproques auto) #}
            <td>
              <input name="lbuy_{{ code }}" value="{{ lb is same as('') ? '' : lb|number_format(6, '.', '') }}" placeholder="ex: 0.952381"
                     class="field w-120" type="number" step="0.000001" min="0" />
            </td>
            <td>
              <input name="lsell_{{ code }}" value="{{ ls is same as('') ? '' : ls|number_format(6, '.', '') }}" placeholder="ex: 0.909091"
                     class="field w-120" type="number" step="0.000001" min="0" />
            </td>

            {# Pourcentage vs mid #}
            <td>
              <input name="pbuy_{{ code }}" value="{{ r and r.percentBuy  is not null ? r.percentBuy  : '' }}" placeholder="ex: 2.0"
                     class="field w-100" type="number" step="0.01" />
            </td>
            <td>
              <input name="psell_{{ code }}" value="{{ r and r.percentSell is not null ? r.percentSell : '' }}" placeholder="ex: 2.0"
                     class="field w-100" type="number" step="0.01" />
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>

    <div style="margin-top:14px;">
      <button class="btn-black" type="submit">Enregistrer</button>
    </div>
  </form>
</div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const rows = document.querySelectorAll('tr[data-code]');

      rows.forEach(row => {
        const code = row.getAttribute('data-code');
        const mb = row.querySelector(`input[name="mbuy_${code}"]`);
        const ms = row.querySelector(`input[name="msell_${code}"]`);
        const lb = row.querySelector(`input[name="lbuy_${code}"]`);
        const ls = row.querySelector(`input[name="lsell_${code}"]`);

        const syncReciprocal = (src, dst) => {
          if (!src || !dst) return;
          src.addEventListener('input', () => {
            const v = parseFloat(src.value);
            if (!isNaN(v) && v > 0) {
              dst.value = (1 / v).toFixed(6);
            } else if (src.value === '') {
              dst.value = '';
            }
          });
        };

        // Synchronise EUR→Local <-> Local→EUR
        syncReciprocal(mb, lb);
        syncReciprocal(lb, mb);
        syncReciprocal(ms, ls);
        syncReciprocal(ls, ms);
      });
    });
  </script>
{% endblock %}

